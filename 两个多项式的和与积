class Node(object):
    def __init__(self,term,power,pnext=None):
        self.term=term
        self.power=power
        self.next=pnext

class multinomial(object):
    def __init__(self):
        self.head=None
        self.maxpower=0

    def rwrite(self):
        """用来创建或重写多项式的函数"""
        self.head=None
        self.maxpower=0
        while True:
            pterm,ppower=map(int,input().split())
            if(pterm==0):
                break
            else:
                self.head=Node(pterm,ppower,self.head)
                if(ppower>self.maxpower):
                    self.maxpower=ppower

    def printf(self):
        """用来输出多项式来检验多项式输入正确与否"""
        temp=self.head
        while(temp!=None):
            print(temp.term,temp.power)
            temp=temp.next

    def correspondingTerms(self,ppower):
        """从系数查找相对应的项数"""
        temp=self.head
        if(ppower>self.maxpower or ppower<0):
            return 0
        else:
            while(temp!=None and ppower!=temp.power):
                temp=temp.next
            if(temp==None):
                return 0
            else:
                return(temp.term)

p1=multinomial()
p2=multinomial()
p3=multinomial()
p4=multinomial()
regulate=0
while(regulate==0):
    print('请输入第一个多项式')
    p1.rwrite()
    print('请输入第二个多项式')
    p2.rwrite()
    print('第一个多项式为：')
    p1.printf()
    print('第二个多项式为：')
    p2.printf()
    regulate=input('请检查一下，正确输入非0的数字')

print("两个多项式和为：")
p3.maxpower=max(p1.maxpower,p2.maxpower)
for i in range(p3.maxpower+1):
    ppterm=p1.correspondingTerms(i)+p2.correspondingTerms(i)
    if(ppterm!=0):
        p3.head=Node(ppterm,i,p3.head)
p3.printf()

print("两个多项式积为：")
p4.maxpower=p1.maxpower+p2.maxpower
for i in range(p4.maxpower+1):
    ppterm=0
    for j in range(i+1):
        ppterm+=p1.correspondingTerms(j)*p2.correspondingTerms(i-j)
    if(ppterm!=0):
        p4.head=Node(ppterm,i,p4.head)
p4.printf()

"""求多项式的和与积初步完成。"""

